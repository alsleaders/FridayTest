// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fridaytest;

namespace fridaytest.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190630204642_AddedDestinationModel")]
    partial class AddedDestinationModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("fridaytest.Model.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("TripId");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("fridaytest.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DestinationId");

                    b.Property<float>("Lat");

                    b.Property<float>("Long");

                    b.Property<string>("Place");

                    b.Property<bool>("Visited");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("fridaytest.Model.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("fridaytest.Model.Destination", b =>
                {
                    b.HasOne("fridaytest.Model.Trip", "Trip")
                        .WithMany("Destinations")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("fridaytest.Model.Location", b =>
                {
                    b.HasOne("fridaytest.Model.Destination", "Destination")
                        .WithMany("Location")
                        .HasForeignKey("DestinationId");
                });
#pragma warning restore 612, 618
        }
    }
}
